name: conductor test workflow

defaults:
  run:
    shell: bash
    working-directory: ./conductor/

permissions:
  pull-requests: write
  deployments: write
  id-token: write
  contents: read

on:
  pull_request:
    branches:
      - main
    paths:
    - '.github/workflows/conductor-test.yml'
    - 'conductor/**'
  # Always run tests on main or release branches
  push:
    branches:
      - main
      - release**

jobs:
  lint:
    name: Run linters
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install minimal nightly with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "conductor-lint"
          workspaces: |
            conductor
      - name: Cargo format
        run: cargo +nightly fmt --all --check
      - name: Clippy
        run: cargo clippy
  test:
    name: Run unit tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "conductor-test"
          workspaces: |
            conductor
      - name: Unit tests
        run: cargo test

  functional_test:
    name: Run functional testing
    runs-on:
      - self-hosted
      - dind
      - core-auto
      - large-8x8
    strategy:
      # fail-fast means to cancel all jobs if one fails
      fail-fast: false
      matrix:
        # Go here for a list of versions:
        # https://github.com/kubernetes-sigs/kind/releases
        node_image:
          - 'kindest/node:v1.25.3'
    steps:
      - uses: actions/checkout@v2
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.5.0
        with:
          node_image: ${{ matrix.node_image }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "conductor-functional-test"
          workspaces: |
            conductor
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: "us-east-1"
          role-to-assume: "arn:aws:iam::484221059514:role/cdb-plat-use1-dev-data-1-conductor-gha"
      - name: Run functional / integration tests
        run: |
          set -xe

          # Install Helm
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

          # Install Traefik
          make setup.traefik

          # Install the CoreDB operator
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev
          cargo install coredb-cli
          coredb-cli install --branch main
          kubectl get crds

          # Start local postgres for the Nile queues
          docker run -d --name pgmq -e POSTGRES_PASSWORD=postgres -p 5432:5432 postgres

          # Start conductor with test configuration
          make run.test &

          # Run the tests
          cargo test -- --ignored --nocapture
      - name: Debugging information
        if: always()
        run: |
          set +e
          set -x
          echo "=========="
          kubectl get pods --all-namespaces
          echo "=========="
          kubectl get -o yaml sts --all-namespaces
          echo "=========="
          kubectl get -o yaml svc --all-namespaces
          echo "=========="
          kubectl get -o yaml pods --all-namespaces
          echo "=========="
          kubectl get -o yaml coredb --all-namespaces
          echo "=========="
          kubectl logs -n coredb-operator $(kubectl get pods -n coredb-operator | grep coredb-controller | cut -d' ' -f1)
