name: Conductor deployment automation

on:
  push:
    branches:
      # - main
      - update-dev-cluster


jobs:
  push_to_registry:
    name: Build and push image
    runs-on: ubuntu-20.04
    outputs:
      short_sha: ${{ steps.versions.outputs.SHORT_SHA }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Check out the coredb repo to reuse some actions
        uses: actions/checkout@v3
        with:
          repository: coredb-io/coredb
          path: ./coredb
          ref: release/2023.2.15
      - uses: azure/setup-kubectl@v3
      - uses: azure/setup-helm@v3
      - name: Set version strings
        id: versions
        run: |
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      # - name: Build and upload operator image
      #   uses: ./coredb/.github/actions/build-and-push-to-quay
      #   with:
      #     image_name: conductor
      #     publish_latest: true
      #     publish_calver: true
      #     docker_directory: ./conductor
      #     quay_user: ${{ secrets.QUAY_USER }}
      #     quay_password: ${{ secrets.QUAY_PASSWORD }}
  update_argocd_dev:
    name: Update ArgoCD in dev environment
    runs-on: ubuntu-20.04
    needs:
      - push_to_registry
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          repository: coredb-io/app-deploy-dev
          ssh-key: ${{ secrets.SERVICE_USER_GITHUB_SSH_KEY }}
      - name: Install yq
        run: |
          set -xe
          snap install yq --channel=v3/stable
      - name: Update helm parameters and chart version
        run: |
          set -xe
          MANIFEST_FILE="dev/data-plane.yaml"
          yq e -i '.spec.source.targetRevision= "${{ needs.push_to_registry.outputs.short_sha }}"' $MANIFEST_FILE
          yq e -i '(.spec.source.helm.parameters.[] | select(.name == "image.tag")).value = "${{ needs.push_to_registry.outputs.short_sha }}"' $MANIFEST_FILE
      - name: Git commit and push to remote
        run: |
          set -xe
          git config --global user.name "coredb-service-user"
          git config --global user.email "admin+github@coredb.io"
          git add --all
          # debugging
          git diff HEAD
